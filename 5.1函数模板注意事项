#define _CRT_SECURE_NO_WARNINGS
#include<iostream>
using namespace std;
template <typename T>//创建模版并命名为T
void Myswap(T& a, T& b)
{
	T temp = a;
	a = b;
	b = temp;
}
//1、自动类型推导，必须推导出一致的数据类型T,才可以使用
void text01()
{
	int a = 10;
	int b = 20;
	char c = 'c';
	Myswap(a, b); // 正确，可以推导出一致的T
	//mySwap(a, c); // 错误，推导不出一致的T类型
	cout << "a=" << a << endl;
	cout << "b=" << b<< endl;
	cout << "c=" << c << endl;
}
//2、模版必须要确定出T的数据类型
template<class T>
void func()
{
	cout << "func 调用" << endl;
}
void text02()
{
	//func(); // 错误，模板不能独立使用，必须确定出T的类型
	func<int>(); // 利用显示指定类型的方式，给T一个类型，才可以使用该模板
}
int main()
{
	text01();
	system("pause");
	return 0;
}
//总结：
//* 使用模板时必须确定出通用数据类型T，并且能够推导出一致的类型

